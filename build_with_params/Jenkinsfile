pipeline {
    agent any

    parameters {
        choice choices: ['BRANCH', 'TAG', 'BRANCH_and_TAG', 'REVISION', 'PULL_REQUESTS'], description: '', name: 'TYPE'

        gitParameter ( 
            branch: '',
            branchFilter: '.*',
            defaultValue: 'main',
            description: '',
            name: 'BRANCH',
            quickFilterEnabled: true,
            selectedValue: 'NONE',
            sortMode: 'NONE',
            tagFilter: '*',
            type: 'PT_BRANCH',
            useRepository: 'git@github.com:kryvetskyi/jenkins-docker.git')
        
        gitParameter ( 
            branch: '',
            branchFilter: '.*',
            defaultValue: 'main',
            description: '',
            name: 'TAG',
            quickFilterEnabled: true,
            selectedValue: 'NONE',
            sortMode: 'NONE',
            tagFilter: '*',
            type: 'PT_TAG',
            useRepository: 'git@github.com:kryvetskyi/jenkins-docker.git')

        gitParameter ( 
            branch: '',
            branchFilter: '.*',
            defaultValue: 'main',
            description: '',
            listSize: '10',
            name: 'BRANCH_and_TAG',
            quickFilterEnabled: true,
            selectedValue: 'NONE',
            sortMode: 'NONE',
            tagFilter: '*',
            type: 'PT_BRANCH_TAG',
            useRepository: 'git@github.com:kryvetskyi/jenkins-docker.git')

        gitParameter ( 
            branch: '',
            branchFilter: '.*',
            defaultValue: 'main',
            description: '',
            name: 'REVISION',
            quickFilterEnabled: true,
            selectedValue: 'NONE',
            sortMode: 'NONE',
            tagFilter: '*',
            type: 'PT_REVISION',
            useRepository: 'git@github.com:kryvetskyi/jenkins-docker.git')

        gitParameter ( 
            branch: '',
            branchFilter: '.*',
            defaultValue: 'main',
            description: '',
            name: 'PULL_REQUESTS',
            quickFilterEnabled: true,
            selectedValue: 'NONE',
            sortMode: 'NONE',
            tagFilter: '*',
            type: 'PT_PULL_REQUESTS',
            useRepository: 'git@github.com:kryvetskyi/jenkins-docker.git')
    }

    stages {
        
        stage('Delete workspace before build starts') {
            steps {
                sh 'echo Deleting workspace'
                deleteDir()
            }
        } 

        stage('Env print') {
            steps {
                sh '''
                echo selected TYPE of checkout is $TYPE
                echo selected BRANCH name is $BRANCH
                echo selected TAG name is $TAG
                echo selected BRANCH or TAG name is $BRANCH_and_TAG
                echo selected REVISION  is $REVISION
                echo selected PUL REQUESTS is $PULL_REQUESTS
                '''
            }
        }

        stage('Checkout') {
            parallel {
                stage('Branch') {
                    when {
                        expression { params.TYPE == 'BRANCH'}
                    }
                    steps {
                        checkout(
                            [
                            $class: 'GitSCM',
                            branches: [[name: "${params.BRANCH}"]],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [], 
                            userRemoteConfigs: 
                            [[credentialsId: 'jenkins-local-mac',
                            url: 'git@github.com:kryvetskyi/jenkins-docker.git']]]
                        )
                    }
                }

                stage('TAG') {
                    when {
                        expression {params.TYPE == 'TAG'}
                    }
                    steps {
                        checkout(
                            [
                            $class: 'GitSCM',
                            branches: [[name: "${params.TAG}"]],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [], 
                            userRemoteConfigs: 
                            [[credentialsId: 'jenkins-local-mac',
                            url: 'git@github.com:kryvetskyi/jenkins-docker.git']]]
                        )
                    }
                }
                stage('BRANCH_and_TAG') {
                    when {
                        expression {params.TYPE == 'BRANCH_and_TAG'}
                    }
                    steps {
                        checkout(
                            [
                            $class: 'GitSCM',
                            branches: [[name: "${params.BRANCH_and_TAG}"]],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [], 
                            userRemoteConfigs: 
                            [[credentialsId: 'jenkins-local-mac',
                            url: 'git@github.com:kryvetskyi/jenkins-docker.git']]]
                        )
                    }
                }

                stage('REVISION') {
                    when {
                        expression {params.TYPE == 'REVISION'}
                    }
                    steps {
                        checkout(
                            [
                            $class: 'GitSCM',
                            branches: [[name: "${params.REVISION}"]],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [], 
                            userRemoteConfigs: 
                            [[credentialsId: 'jenkins-local-mac',
                            url: 'git@github.com:kryvetskyi/jenkins-docker.git']]]
                        )
                    }
                }

                stage('PULL_REQUESTS') {
                    when {
                        expression {params.TYPE == 'PULL_REQUESTS'}
                    }
                    steps {
                        checkout(
                            [
                            $class: 'GitSCM',
                            branches: [[name: "pr/${params.PULL_REQUESTS}/head"]],
                            doGenerateSubmoduleConfigurations: false,
                            extensions: [],
                            submoduleCfg: [], 
                            userRemoteConfigs: 
                            [[credentialsId: 'jenkins-local-mac',
                            refspec: '+refs/pull/*:refs/remotes/origin/pr/*',
                            url: 'git@github.com:kryvetskyi/jenkins-docker.git']]]
                        )
                    }
                }
            }        
        }

        stage('Ls work dir') {
            steps {
                sh 'ls -la'
                sh 'cat server.py'
            }
        }
    }
}